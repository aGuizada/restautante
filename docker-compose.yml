version: '3'

services:
  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: restaurante_app
    restart: unless-stopped
    working_dir: /var/www/html
    volumes:
      - .:/var/www/html
      - ./storage:/var/www/html/storage
    networks:
      - backend_network
    depends_on:
      - db
    user: "1000:1000"

  nginx:
    image: nginx:stable-alpine
    container_name: restaurante_nginx
    restart: unless-stopped
    ports:
      - "8000:80"
    volumes:
      - .:/var/www/html
      - ./nginx/conf.d:/etc/nginx/conf.d
    networks:
      - backend_network
    depends_on:
      - app

  db:
    image: mysql:8.0
    container_name: restaurante_db
    restart: unless-stopped
    environment:
      - MYSQL_ROOT_PASSWORD=root_password
      - MYSQL_DATABASE=restaurante
      - MYSQL_USER=restaurante
      - MYSQL_PASSWORD=restaurante
    volumes:
      - mysql_data:/var/lib/mysql
      - ./docker-entrypoint-initdb.d:/docker-entrypoint-initdb.d
    networks:
      - backend_network

  phpmyadmin:
    image: phpmyadmin/phpmyadmin
    container_name: restaurante_phpmyadmin
    restart: unless-stopped
    ports:
      - "8080:80"
    environment:
      - PMA_HOST=db
      - PMA_USER=restaurante
      - PMA_PASSWORD=restaurante
      - PMA_ROOT_PASSWORD=restaurante
    depends_on:
      - db
    networks:
      - backend_network

networks:
  backend_network:
    driver: bridge

volumes:
  mysql_data:
